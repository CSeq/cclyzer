//----------------------------------------------------------------------
// Each function declaration should be mapped to exactly one function
// definition.
//
// In principle, not all function declarations will map directly to a
// function definition. For instance, function calls that belong to
// dynamically linked libraries cannot be resolved.
//----------------------------------------------------------------------

function:definition[Decl] = Def ->
   function_decl(Decl), function(Def).


//----------------------------------------------------------------------
// Reflexivity: Each function declaration, which also happens to be a
// definition, maps to itself.
//----------------------------------------------------------------------

function:definition[Func] = Func <-
   function(Func).


//----------------------------------------------------------------------
// Mapping from call instructions to their declarations
//----------------------------------------------------------------------

call_instruction:function_decl[Insn] = FuncDecl <-
   direct_call_instruction(Insn),
   call_instruction:function[Insn] = Op,
   operand:as_immediate[Op] = Imm,
   immediate:value[Imm] = FuncName,
   function:name[FuncDecl] = FuncName.

// Is this always true??
direct_call_instruction(Insn) -> call_instruction:function_decl[Insn] = _.



//----------------------------------------------------------------------
// Mapping from call instructions to the actual function definitions
//----------------------------------------------------------------------

call_instruction:function_defn[Insn] = FuncDef <-
   call_instruction:function_decl[Insn] = FuncDecl,
   function:definition[FuncDecl] = FuncDef.
