// http://llvm.org/docs/LangRef.html#zext-to-instruction
// keywords: conversion; unary; instruction

zext_instruction(Insn) -> instruction(Insn).

zext_instruction:from[Insn] = Value -> 
   zext_instruction(Insn), operand(Value).

zext_instruction:to_type[Insn] = Type -> 
   zext_instruction(Insn), type(Type).

zext_instruction:from_type[Insn] = Type <-
   zext_instruction:from[Insn] = Value,
   operand:type[Value] = Type.

// Constraints:
//
// The ‘zext‘ instruction takes:
//  (i)  a value to cast,
//  (ii) and a type to cast it to
//
// Both arguments must be: 	
//  (i)  integers or
//  (ii) vectors of the same number of integers.

zext_instruction(Insn) -> zext_instruction:from[Insn] = _.
zext_instruction(Insn) -> zext_instruction:to_type[Insn] = _.


zext_instruction:to_type[Insn] = Type
 ->
   instruction:type[Insn] = Type.


zext_instruction:from_type[_] = Type
 -> 
   integer_type(Type); vector_type:integer(Type).


zext_instruction:to_type[Insn] = Type
 ->
   integer_type(Type); vector_type:integer(Type).


zext_instruction(Insn),
   zext_instruction:from_type[Insn] = From,
   zext_instruction:to_type[Insn] = To
 -> 
   vector:compatible(From, To).
