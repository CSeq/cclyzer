// http://llvm.org/docs/LangRef.html#fptoui-to-instruction
// keywords: conversion; unary; instruction

fptoui_instruction(Insn) -> instruction(Insn).

fptoui_instruction:from[Insn] = Value -> 
   fptoui_instruction(Insn), operand(Value).

fptoui_instruction:to_type[Insn] = Type -> 
   fptoui_instruction(Insn), type(Type).

fptoui_instruction:from_type[Insn] = Type <-
   fptoui_instruction:from[Insn] = Value,
   operand:type[Value] = Type.

// Constraints:
//
// The ‘fptoui‘ instruction takes:
//  (i)  a value to cast, which must be a scalar or vector floating point value, 
//  (ii) and a type to cast it to, which must be an integer type. 
//
// If the value to be casted is a vector floating point type:
//  (i)  the type must be a vector integer type, 
//  (ii) with the same number of elements.

fptoui_instruction(Insn) -> fptoui_instruction:from[Insn] = _.
fptoui_instruction(Insn) -> fptoui_instruction:to_type[Insn] = _.


fptoui_instruction:to_type[Insn] = Type
 ->
   instruction:type[Insn] = Type.


fptoui_instruction:from_type[_] = Type
 -> 
   fp_type(Type); vector_type:fp(Type).


fptoui_instruction:to_type[_] = Type
 -> 
   integer_type(Type); vector_type:integer(Type).


fptoui_instruction(Insn),
   fptoui_instruction:from_type[Insn] = From,
   fptoui_instruction:to_type[Insn] = To
 -> 
   vector:compatible(From, To).
