// http://llvm.org/docs/LangRef.html#xor-instruction
// keywords: bitwise; binary; instruction

xor_instruction(Insn) -> instruction(Insn).

xor_instruction:first_operand[Insn] = Left ->
   xor_instruction(Insn), operand(Left).

xor_instruction:second_operand[Insn] = Right ->
   xor_instruction(Insn), operand(Right).

// Constraints:
// The two arguments to the ‘xor‘ instruction must be:
//    (i)  integer or
//    (ii) vector of integer values.
// Both arguments must have identical types.
// The resulting value is the same type as its operands.

xor_instruction(Insn) -> xor_instruction:first_operand[Insn] = _.
xor_instruction(Insn) -> xor_instruction:second_operand[Insn] = _.

xor_instruction(Insn),
   instruction:type[Insn] = Type
 ->
   integer_type(Type); vector_type:integer(Type).

instruction:type[Insn] = Type,
   xor_instruction:first_operand[Insn] = Left
 ->
   operand:type[Left] = Type.

instruction:type[Insn] = Type,
   xor_instruction:second_operand[Insn] = Right
 ->
   operand:type[Right] = Type.
