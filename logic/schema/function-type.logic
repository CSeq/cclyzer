// http://llvm.org/docs/LangRef.html#function-type
// keywords: derived

function_type(Type) -> derived_type(Type).
function_type:varargs(Type) -> function_type(Type).

function_type:return[Type] = Ret -> 
   function_type(Type), type(Ret).

function_type:params[Type, Index] = Param -> 
   function_type(Type), int[64](Index), type(Param).

function_type:nparams[Type] = Total -> 
   function_type(Type), int[64](Total).


// Constraints:
//
//  (1) The return type is any type except label and metadata.


function_type:return[_] = Ret ->
   !metadata_type[] = Type,
   !label_type[] = Type.
