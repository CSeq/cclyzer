
// Auto-generated import logic for add_instruction:first_operand

_add_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_add_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_add_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_add_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_add_instruction:first_operand$imm]  = "./data/add_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_add_instruction:first_operand$var]  = "./data/add_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+add_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    add_instruction(Insn),
    _add_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+add_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    add_instruction(Insn),
    _add_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fadd_instruction:first_operand

_fadd_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fadd_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fadd_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_fadd_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_fadd_instruction:first_operand$imm]  = "./data/fadd_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_fadd_instruction:first_operand$var]  = "./data/fadd_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fadd_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fadd_instruction(Insn),
    _fadd_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fadd_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fadd_instruction(Insn),
    _fadd_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for sub_instruction:first_operand

_sub_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_sub_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_sub_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_sub_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_sub_instruction:first_operand$imm]  = "./data/sub_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_sub_instruction:first_operand$var]  = "./data/sub_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+sub_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sub_instruction(Insn),
    _sub_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+sub_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sub_instruction(Insn),
    _sub_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fsub_instruction:first_operand

_fsub_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fsub_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fsub_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_fsub_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_fsub_instruction:first_operand$imm]  = "./data/fsub_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_fsub_instruction:first_operand$var]  = "./data/fsub_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fsub_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fsub_instruction(Insn),
    _fsub_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fsub_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fsub_instruction(Insn),
    _fsub_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for mul_instruction:first_operand

_mul_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_mul_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_mul_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_mul_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_mul_instruction:first_operand$imm]  = "./data/mul_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_mul_instruction:first_operand$var]  = "./data/mul_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+mul_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    mul_instruction(Insn),
    _mul_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+mul_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    mul_instruction(Insn),
    _mul_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fmul_instruction:first_operand

_fmul_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fmul_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fmul_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_fmul_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_fmul_instruction:first_operand$imm]  = "./data/fmul_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_fmul_instruction:first_operand$var]  = "./data/fmul_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fmul_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fmul_instruction(Insn),
    _fmul_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fmul_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fmul_instruction(Insn),
    _fmul_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for udiv_instruction:first_operand

_udiv_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_udiv_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_udiv_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_udiv_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_udiv_instruction:first_operand$imm]  = "./data/udiv_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_udiv_instruction:first_operand$var]  = "./data/udiv_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+udiv_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    udiv_instruction(Insn),
    _udiv_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+udiv_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    udiv_instruction(Insn),
    _udiv_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for sdiv_instruction:first_operand

_sdiv_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_sdiv_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_sdiv_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_sdiv_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_sdiv_instruction:first_operand$imm]  = "./data/sdiv_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_sdiv_instruction:first_operand$var]  = "./data/sdiv_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+sdiv_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sdiv_instruction(Insn),
    _sdiv_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+sdiv_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sdiv_instruction(Insn),
    _sdiv_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fdiv_instruction:first_operand

_fdiv_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fdiv_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fdiv_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_fdiv_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_fdiv_instruction:first_operand$imm]  = "./data/fdiv_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_fdiv_instruction:first_operand$var]  = "./data/fdiv_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fdiv_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fdiv_instruction(Insn),
    _fdiv_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fdiv_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fdiv_instruction(Insn),
    _fdiv_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for frem_instruction:first_operand

_frem_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_frem_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_frem_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_frem_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_frem_instruction:first_operand$imm]  = "./data/frem_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_frem_instruction:first_operand$var]  = "./data/frem_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+frem_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    frem_instruction(Insn),
    _frem_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+frem_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    frem_instruction(Insn),
    _frem_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for srem_instruction:first_operand

_srem_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_srem_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_srem_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_srem_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_srem_instruction:first_operand$imm]  = "./data/srem_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_srem_instruction:first_operand$var]  = "./data/srem_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+srem_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    srem_instruction(Insn),
    _srem_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+srem_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    srem_instruction(Insn),
    _srem_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for urem_instruction:first_operand

_urem_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_urem_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_urem_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_urem_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_urem_instruction:first_operand$imm]  = "./data/urem_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_urem_instruction:first_operand$var]  = "./data/urem_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+urem_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    urem_instruction(Insn),
    _urem_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+urem_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    urem_instruction(Insn),
    _urem_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for add_instruction:second_operand

_add_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_add_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_add_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_add_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_add_instruction:second_operand$imm]  = "./data/add_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_add_instruction:second_operand$var]  = "./data/add_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+add_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    add_instruction(Insn),
    _add_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+add_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    add_instruction(Insn),
    _add_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fadd_instruction:second_operand

_fadd_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fadd_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fadd_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_fadd_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_fadd_instruction:second_operand$imm]  = "./data/fadd_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_fadd_instruction:second_operand$var]  = "./data/fadd_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fadd_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fadd_instruction(Insn),
    _fadd_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fadd_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fadd_instruction(Insn),
    _fadd_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for sub_instruction:second_operand

_sub_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_sub_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_sub_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_sub_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_sub_instruction:second_operand$imm]  = "./data/sub_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_sub_instruction:second_operand$var]  = "./data/sub_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+sub_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sub_instruction(Insn),
    _sub_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+sub_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sub_instruction(Insn),
    _sub_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fsub_instruction:second_operand

_fsub_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fsub_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fsub_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_fsub_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_fsub_instruction:second_operand$imm]  = "./data/fsub_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_fsub_instruction:second_operand$var]  = "./data/fsub_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fsub_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fsub_instruction(Insn),
    _fsub_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fsub_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fsub_instruction(Insn),
    _fsub_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for mul_instruction:second_operand

_mul_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_mul_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_mul_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_mul_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_mul_instruction:second_operand$imm]  = "./data/mul_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_mul_instruction:second_operand$var]  = "./data/mul_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+mul_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    mul_instruction(Insn),
    _mul_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+mul_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    mul_instruction(Insn),
    _mul_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fmul_instruction:second_operand

_fmul_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fmul_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fmul_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_fmul_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_fmul_instruction:second_operand$imm]  = "./data/fmul_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_fmul_instruction:second_operand$var]  = "./data/fmul_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fmul_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fmul_instruction(Insn),
    _fmul_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fmul_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fmul_instruction(Insn),
    _fmul_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for udiv_instruction:second_operand

_udiv_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_udiv_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_udiv_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_udiv_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_udiv_instruction:second_operand$imm]  = "./data/udiv_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_udiv_instruction:second_operand$var]  = "./data/udiv_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+udiv_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    udiv_instruction(Insn),
    _udiv_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+udiv_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    udiv_instruction(Insn),
    _udiv_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for sdiv_instruction:second_operand

_sdiv_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_sdiv_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_sdiv_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_sdiv_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_sdiv_instruction:second_operand$imm]  = "./data/sdiv_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_sdiv_instruction:second_operand$var]  = "./data/sdiv_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+sdiv_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sdiv_instruction(Insn),
    _sdiv_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+sdiv_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sdiv_instruction(Insn),
    _sdiv_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fdiv_instruction:second_operand

_fdiv_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fdiv_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fdiv_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_fdiv_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_fdiv_instruction:second_operand$imm]  = "./data/fdiv_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_fdiv_instruction:second_operand$var]  = "./data/fdiv_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fdiv_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fdiv_instruction(Insn),
    _fdiv_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fdiv_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fdiv_instruction(Insn),
    _fdiv_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for frem_instruction:second_operand

_frem_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_frem_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_frem_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_frem_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_frem_instruction:second_operand$imm]  = "./data/frem_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_frem_instruction:second_operand$var]  = "./data/frem_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+frem_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    frem_instruction(Insn),
    _frem_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+frem_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    frem_instruction(Insn),
    _frem_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for srem_instruction:second_operand

_srem_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_srem_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_srem_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_srem_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_srem_instruction:second_operand$imm]  = "./data/srem_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_srem_instruction:second_operand$var]  = "./data/srem_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+srem_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    srem_instruction(Insn),
    _srem_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+srem_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    srem_instruction(Insn),
    _srem_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for urem_instruction:second_operand

_urem_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_urem_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_urem_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_urem_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_urem_instruction:second_operand$imm]  = "./data/urem_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_urem_instruction:second_operand$var]  = "./data/urem_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+urem_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    urem_instruction(Insn),
    _urem_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+urem_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    urem_instruction(Insn),
    _urem_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for and_instruction:second_operand

_and_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_and_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_and_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_and_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_and_instruction:second_operand$imm]  = "./data/and_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_and_instruction:second_operand$var]  = "./data/and_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+and_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    and_instruction(Insn),
    _and_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+and_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    and_instruction(Insn),
    _and_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for and_instruction:second_operand

_and_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_and_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_and_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_and_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_and_instruction:second_operand$imm]  = "./data/and_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_and_instruction:second_operand$var]  = "./data/and_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+and_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    and_instruction(Insn),
    _and_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+and_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    and_instruction(Insn),
    _and_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for or_instruction:second_operand

_or_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_or_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_or_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_or_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_or_instruction:second_operand$imm]  = "./data/or_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_or_instruction:second_operand$var]  = "./data/or_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+or_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    or_instruction(Insn),
    _or_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+or_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    or_instruction(Insn),
    _or_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for or_instruction:second_operand

_or_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_or_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_or_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_or_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_or_instruction:second_operand$imm]  = "./data/or_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_or_instruction:second_operand$var]  = "./data/or_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+or_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    or_instruction(Insn),
    _or_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+or_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    or_instruction(Insn),
    _or_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for xor_instruction:second_operand

_xor_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_xor_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_xor_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_xor_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_xor_instruction:second_operand$imm]  = "./data/xor_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_xor_instruction:second_operand$var]  = "./data/xor_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+xor_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    xor_instruction(Insn),
    _xor_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+xor_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    xor_instruction(Insn),
    _xor_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for xor_instruction:second_operand

_xor_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_xor_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_xor_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_xor_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_xor_instruction:second_operand$imm]  = "./data/xor_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_xor_instruction:second_operand$var]  = "./data/xor_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+xor_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    xor_instruction(Insn),
    _xor_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+xor_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    xor_instruction(Insn),
    _xor_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for shl_instruction:second_operand

_shl_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_shl_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_shl_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_shl_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_shl_instruction:second_operand$imm]  = "./data/shl_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_shl_instruction:second_operand$var]  = "./data/shl_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+shl_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    shl_instruction(Insn),
    _shl_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+shl_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    shl_instruction(Insn),
    _shl_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for shl_instruction:second_operand

_shl_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_shl_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_shl_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_shl_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_shl_instruction:second_operand$imm]  = "./data/shl_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_shl_instruction:second_operand$var]  = "./data/shl_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+shl_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    shl_instruction(Insn),
    _shl_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+shl_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    shl_instruction(Insn),
    _shl_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for lshr_instruction:second_operand

_lshr_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_lshr_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_lshr_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_lshr_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_lshr_instruction:second_operand$imm]  = "./data/lshr_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_lshr_instruction:second_operand$var]  = "./data/lshr_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+lshr_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    lshr_instruction(Insn),
    _lshr_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+lshr_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    lshr_instruction(Insn),
    _lshr_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for lshr_instruction:second_operand

_lshr_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_lshr_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_lshr_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_lshr_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_lshr_instruction:second_operand$imm]  = "./data/lshr_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_lshr_instruction:second_operand$var]  = "./data/lshr_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+lshr_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    lshr_instruction(Insn),
    _lshr_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+lshr_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    lshr_instruction(Insn),
    _lshr_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for ashr_instruction:second_operand

_ashr_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_ashr_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_ashr_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_ashr_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_ashr_instruction:second_operand$imm]  = "./data/ashr_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_ashr_instruction:second_operand$var]  = "./data/ashr_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+ashr_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    ashr_instruction(Insn),
    _ashr_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+ashr_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    ashr_instruction(Insn),
    _ashr_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for ashr_instruction:second_operand

_ashr_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_ashr_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_ashr_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_ashr_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_ashr_instruction:second_operand$imm]  = "./data/ashr_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_ashr_instruction:second_operand$var]  = "./data/ashr_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+ashr_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    ashr_instruction(Insn),
    _ashr_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+ashr_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    ashr_instruction(Insn),
    _ashr_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for bitcast_instruction:from

_bitcast_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_bitcast_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_bitcast_instruction:from$imm] = "\t".
lang:physical:delimiter[`_bitcast_instruction:from$var] = "\t".
lang:physical:filePath[`_bitcast_instruction:from$imm]  = "./data/bitcast_instruction-from-imm.dlm".
lang:physical:filePath[`_bitcast_instruction:from$var]  = "./data/bitcast_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+bitcast_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    bitcast_instruction(Insn),
    _bitcast_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+bitcast_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    bitcast_instruction(Insn),
    _bitcast_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for inttoptr_instruction:from

_inttoptr_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_inttoptr_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_inttoptr_instruction:from$imm] = "\t".
lang:physical:delimiter[`_inttoptr_instruction:from$var] = "\t".
lang:physical:filePath[`_inttoptr_instruction:from$imm]  = "./data/inttoptr_instruction-from-imm.dlm".
lang:physical:filePath[`_inttoptr_instruction:from$var]  = "./data/inttoptr_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+inttoptr_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    inttoptr_instruction(Insn),
    _inttoptr_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+inttoptr_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    inttoptr_instruction(Insn),
    _inttoptr_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for ptrtoint_instruction:from

_ptrtoint_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_ptrtoint_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_ptrtoint_instruction:from$imm] = "\t".
lang:physical:delimiter[`_ptrtoint_instruction:from$var] = "\t".
lang:physical:filePath[`_ptrtoint_instruction:from$imm]  = "./data/ptrtoint_instruction-from-imm.dlm".
lang:physical:filePath[`_ptrtoint_instruction:from$var]  = "./data/ptrtoint_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+ptrtoint_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    ptrtoint_instruction(Insn),
    _ptrtoint_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+ptrtoint_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    ptrtoint_instruction(Insn),
    _ptrtoint_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for trunc_instruction:from

_trunc_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_trunc_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_trunc_instruction:from$imm] = "\t".
lang:physical:delimiter[`_trunc_instruction:from$var] = "\t".
lang:physical:filePath[`_trunc_instruction:from$imm]  = "./data/trunc_instruction-from-imm.dlm".
lang:physical:filePath[`_trunc_instruction:from$var]  = "./data/trunc_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+trunc_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    trunc_instruction(Insn),
    _trunc_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+trunc_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    trunc_instruction(Insn),
    _trunc_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for zext_instruction:from

_zext_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_zext_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_zext_instruction:from$imm] = "\t".
lang:physical:delimiter[`_zext_instruction:from$var] = "\t".
lang:physical:filePath[`_zext_instruction:from$imm]  = "./data/zext_instruction-from-imm.dlm".
lang:physical:filePath[`_zext_instruction:from$var]  = "./data/zext_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+zext_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    zext_instruction(Insn),
    _zext_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+zext_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    zext_instruction(Insn),
    _zext_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for sext_instruction:from

_sext_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_sext_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_sext_instruction:from$imm] = "\t".
lang:physical:delimiter[`_sext_instruction:from$var] = "\t".
lang:physical:filePath[`_sext_instruction:from$imm]  = "./data/sext_instruction-from-imm.dlm".
lang:physical:filePath[`_sext_instruction:from$var]  = "./data/sext_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+sext_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sext_instruction(Insn),
    _sext_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+sext_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sext_instruction(Insn),
    _sext_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for fptrunc_instruction:from

_fptrunc_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fptrunc_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fptrunc_instruction:from$imm] = "\t".
lang:physical:delimiter[`_fptrunc_instruction:from$var] = "\t".
lang:physical:filePath[`_fptrunc_instruction:from$imm]  = "./data/fptrunc_instruction-from-imm.dlm".
lang:physical:filePath[`_fptrunc_instruction:from$var]  = "./data/fptrunc_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fptrunc_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fptrunc_instruction(Insn),
    _fptrunc_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fptrunc_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fptrunc_instruction(Insn),
    _fptrunc_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for fpext_instruction:from

_fpext_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fpext_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fpext_instruction:from$imm] = "\t".
lang:physical:delimiter[`_fpext_instruction:from$var] = "\t".
lang:physical:filePath[`_fpext_instruction:from$imm]  = "./data/fpext_instruction-from-imm.dlm".
lang:physical:filePath[`_fpext_instruction:from$var]  = "./data/fpext_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fpext_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fpext_instruction(Insn),
    _fpext_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fpext_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fpext_instruction(Insn),
    _fpext_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for fptoui_instruction:from

_fptoui_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fptoui_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fptoui_instruction:from$imm] = "\t".
lang:physical:delimiter[`_fptoui_instruction:from$var] = "\t".
lang:physical:filePath[`_fptoui_instruction:from$imm]  = "./data/fptoui_instruction-from-imm.dlm".
lang:physical:filePath[`_fptoui_instruction:from$var]  = "./data/fptoui_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fptoui_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fptoui_instruction(Insn),
    _fptoui_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fptoui_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fptoui_instruction(Insn),
    _fptoui_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for fptosi_instruction:from

_fptosi_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fptosi_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fptosi_instruction:from$imm] = "\t".
lang:physical:delimiter[`_fptosi_instruction:from$var] = "\t".
lang:physical:filePath[`_fptosi_instruction:from$imm]  = "./data/fptosi_instruction-from-imm.dlm".
lang:physical:filePath[`_fptosi_instruction:from$var]  = "./data/fptosi_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fptosi_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fptosi_instruction(Insn),
    _fptosi_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fptosi_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fptosi_instruction(Insn),
    _fptosi_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for uitofp_instruction:from

_uitofp_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_uitofp_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_uitofp_instruction:from$imm] = "\t".
lang:physical:delimiter[`_uitofp_instruction:from$var] = "\t".
lang:physical:filePath[`_uitofp_instruction:from$imm]  = "./data/uitofp_instruction-from-imm.dlm".
lang:physical:filePath[`_uitofp_instruction:from$var]  = "./data/uitofp_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+uitofp_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    uitofp_instruction(Insn),
    _uitofp_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+uitofp_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    uitofp_instruction(Insn),
    _uitofp_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for sitofp_instruction:from

_sitofp_instruction:from$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_sitofp_instruction:from$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_sitofp_instruction:from$imm] = "\t".
lang:physical:delimiter[`_sitofp_instruction:from$var] = "\t".
lang:physical:filePath[`_sitofp_instruction:from$imm]  = "./data/sitofp_instruction-from-imm.dlm".
lang:physical:filePath[`_sitofp_instruction:from$var]  = "./data/sitofp_instruction-from-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+sitofp_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sitofp_instruction(Insn),
    _sitofp_instruction:from$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+sitofp_instruction:from[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    sitofp_instruction(Insn),
    _sitofp_instruction:from$var(InsnRef, VarRef).

// Auto-generated import logic for ret_instruction:value

_ret_instruction:value$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_ret_instruction:value$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_ret_instruction:value$imm] = "\t".
lang:physical:delimiter[`_ret_instruction:value$var] = "\t".
lang:physical:filePath[`_ret_instruction:value$imm]  = "./data/ret_instruction-value-imm.dlm".
lang:physical:filePath[`_ret_instruction:value$var]  = "./data/ret_instruction-value-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+ret_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    ret_instruction(Insn),
    _ret_instruction:value$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+ret_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    ret_instruction(Insn),
    _ret_instruction:value$var(InsnRef, VarRef).

// Auto-generated import logic for br_cond_instruction:condition

_br_cond_instruction:condition$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_br_cond_instruction:condition$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_br_cond_instruction:condition$imm] = "\t".
lang:physical:delimiter[`_br_cond_instruction:condition$var] = "\t".
lang:physical:filePath[`_br_cond_instruction:condition$imm]  = "./data/br_cond_instruction-condition-imm.dlm".
lang:physical:filePath[`_br_cond_instruction:condition$var]  = "./data/br_cond_instruction-condition-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+br_cond_instruction:condition[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    br_cond_instruction(Insn),
    _br_cond_instruction:condition$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+br_cond_instruction:condition[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    br_cond_instruction(Insn),
    _br_cond_instruction:condition$var(InsnRef, VarRef).

// Auto-generated import logic for switch_instruction:operand

_switch_instruction:operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_switch_instruction:operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_switch_instruction:operand$imm] = "\t".
lang:physical:delimiter[`_switch_instruction:operand$var] = "\t".
lang:physical:filePath[`_switch_instruction:operand$imm]  = "./data/switch_instruction-operand-imm.dlm".
lang:physical:filePath[`_switch_instruction:operand$var]  = "./data/switch_instruction-operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+switch_instruction:operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    switch_instruction(Insn),
    _switch_instruction:operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+switch_instruction:operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    switch_instruction(Insn),
    _switch_instruction:operand$var(InsnRef, VarRef).

// Auto-generated import logic for indirectbr_instruction:address

_indirectbr_instruction:address$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_indirectbr_instruction:address$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_indirectbr_instruction:address$imm] = "\t".
lang:physical:delimiter[`_indirectbr_instruction:address$var] = "\t".
lang:physical:filePath[`_indirectbr_instruction:address$imm]  = "./data/indirectbr_instruction-address-imm.dlm".
lang:physical:filePath[`_indirectbr_instruction:address$var]  = "./data/indirectbr_instruction-address-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+indirectbr_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    indirectbr_instruction(Insn),
    _indirectbr_instruction:address$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+indirectbr_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    indirectbr_instruction(Insn),
    _indirectbr_instruction:address$var(InsnRef, VarRef).

// Auto-generated import logic for invoke_instruction:function

_invoke_instruction:function$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_invoke_instruction:function$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_invoke_instruction:function$imm] = "\t".
lang:physical:delimiter[`_invoke_instruction:function$var] = "\t".
lang:physical:filePath[`_invoke_instruction:function$imm]  = "./data/invoke_instruction-function-imm.dlm".
lang:physical:filePath[`_invoke_instruction:function$var]  = "./data/invoke_instruction-function-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+invoke_instruction:function[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    invoke_instruction(Insn),
    _invoke_instruction:function$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+invoke_instruction:function[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    invoke_instruction(Insn),
    _invoke_instruction:function$var(InsnRef, VarRef).

// Auto-generated import logic for invoke_instruction:arg

_invoke_instruction:arg$imm(Insn, Index, Imm) ->
    string(Insn), int[64](Index), string(Imm).

_invoke_instruction:arg$var(Insn, Index, Var) ->
    string(Insn), int[64](Index), string(Var).

lang:physical:delimiter[`_invoke_instruction:arg$imm] = "\t".
lang:physical:delimiter[`_invoke_instruction:arg$var] = "\t".
lang:physical:filePath[`_invoke_instruction:arg$imm]  = "./data/invoke_instruction-arg-imm.dlm".
lang:physical:filePath[`_invoke_instruction:arg$var]  = "./data/invoke_instruction-arg-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+invoke_instruction:arg[Insn, Index] = Operand
<-
    instruction:id(Insn:InsnRef),
    invoke_instruction(Insn),
    _invoke_instruction:arg$imm(InsnRef, Index, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+invoke_instruction:arg[Insn, Index] = Operand
<-
    instruction:id(Insn:InsnRef),
    invoke_instruction(Insn),
    _invoke_instruction:arg$var(InsnRef, Index, VarRef).

// Auto-generated import logic for resume_instruction:operand

_resume_instruction:operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_resume_instruction:operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_resume_instruction:operand$imm] = "\t".
lang:physical:delimiter[`_resume_instruction:operand$var] = "\t".
lang:physical:filePath[`_resume_instruction:operand$imm]  = "./data/resume_instruction-operand-imm.dlm".
lang:physical:filePath[`_resume_instruction:operand$var]  = "./data/resume_instruction-operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+resume_instruction:operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    resume_instruction(Insn),
    _resume_instruction:operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+resume_instruction:operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    resume_instruction(Insn),
    _resume_instruction:operand$var(InsnRef, VarRef).

// Auto-generated import logic for extractelement_instruction:base

_extractelement_instruction:base$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_extractelement_instruction:base$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_extractelement_instruction:base$imm] = "\t".
lang:physical:delimiter[`_extractelement_instruction:base$var] = "\t".
lang:physical:filePath[`_extractelement_instruction:base$imm]  = "./data/extractelement_instruction-base-imm.dlm".
lang:physical:filePath[`_extractelement_instruction:base$var]  = "./data/extractelement_instruction-base-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+extractelement_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    extractelement_instruction(Insn),
    _extractelement_instruction:base$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+extractelement_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    extractelement_instruction(Insn),
    _extractelement_instruction:base$var(InsnRef, VarRef).

// Auto-generated import logic for extractelement_instruction:index

_extractelement_instruction:index$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_extractelement_instruction:index$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_extractelement_instruction:index$imm] = "\t".
lang:physical:delimiter[`_extractelement_instruction:index$var] = "\t".
lang:physical:filePath[`_extractelement_instruction:index$imm]  = "./data/extractelement_instruction-index-imm.dlm".
lang:physical:filePath[`_extractelement_instruction:index$var]  = "./data/extractelement_instruction-index-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+extractelement_instruction:index[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    extractelement_instruction(Insn),
    _extractelement_instruction:index$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+extractelement_instruction:index[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    extractelement_instruction(Insn),
    _extractelement_instruction:index$var(InsnRef, VarRef).

// Auto-generated import logic for insertelement_instruction:base

_insertelement_instruction:base$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_insertelement_instruction:base$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_insertelement_instruction:base$imm] = "\t".
lang:physical:delimiter[`_insertelement_instruction:base$var] = "\t".
lang:physical:filePath[`_insertelement_instruction:base$imm]  = "./data/insertelement_instruction-base-imm.dlm".
lang:physical:filePath[`_insertelement_instruction:base$var]  = "./data/insertelement_instruction-base-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+insertelement_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertelement_instruction(Insn),
    _insertelement_instruction:base$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+insertelement_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertelement_instruction(Insn),
    _insertelement_instruction:base$var(InsnRef, VarRef).

// Auto-generated import logic for insertelement_instruction:index

_insertelement_instruction:index$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_insertelement_instruction:index$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_insertelement_instruction:index$imm] = "\t".
lang:physical:delimiter[`_insertelement_instruction:index$var] = "\t".
lang:physical:filePath[`_insertelement_instruction:index$imm]  = "./data/insertelement_instruction-index-imm.dlm".
lang:physical:filePath[`_insertelement_instruction:index$var]  = "./data/insertelement_instruction-index-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+insertelement_instruction:index[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertelement_instruction(Insn),
    _insertelement_instruction:index$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+insertelement_instruction:index[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertelement_instruction(Insn),
    _insertelement_instruction:index$var(InsnRef, VarRef).

// Auto-generated import logic for insertelement_instruction:value

_insertelement_instruction:value$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_insertelement_instruction:value$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_insertelement_instruction:value$imm] = "\t".
lang:physical:delimiter[`_insertelement_instruction:value$var] = "\t".
lang:physical:filePath[`_insertelement_instruction:value$imm]  = "./data/insertelement_instruction-value-imm.dlm".
lang:physical:filePath[`_insertelement_instruction:value$var]  = "./data/insertelement_instruction-value-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+insertelement_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertelement_instruction(Insn),
    _insertelement_instruction:value$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+insertelement_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertelement_instruction(Insn),
    _insertelement_instruction:value$var(InsnRef, VarRef).

// Auto-generated import logic for shufflevector_instruction:first_vector

_shufflevector_instruction:first_vector$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_shufflevector_instruction:first_vector$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_shufflevector_instruction:first_vector$imm] = "\t".
lang:physical:delimiter[`_shufflevector_instruction:first_vector$var] = "\t".
lang:physical:filePath[`_shufflevector_instruction:first_vector$imm]  = "./data/shufflevector_instruction-first_vector-imm.dlm".
lang:physical:filePath[`_shufflevector_instruction:first_vector$var]  = "./data/shufflevector_instruction-first_vector-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+shufflevector_instruction:first_vector[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    shufflevector_instruction(Insn),
    _shufflevector_instruction:first_vector$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+shufflevector_instruction:first_vector[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    shufflevector_instruction(Insn),
    _shufflevector_instruction:first_vector$var(InsnRef, VarRef).

// Auto-generated import logic for shufflevector_instruction:second_vector

_shufflevector_instruction:second_vector$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_shufflevector_instruction:second_vector$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_shufflevector_instruction:second_vector$imm] = "\t".
lang:physical:delimiter[`_shufflevector_instruction:second_vector$var] = "\t".
lang:physical:filePath[`_shufflevector_instruction:second_vector$imm]  = "./data/shufflevector_instruction-second_vector-imm.dlm".
lang:physical:filePath[`_shufflevector_instruction:second_vector$var]  = "./data/shufflevector_instruction-second_vector-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+shufflevector_instruction:second_vector[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    shufflevector_instruction(Insn),
    _shufflevector_instruction:second_vector$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+shufflevector_instruction:second_vector[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    shufflevector_instruction(Insn),
    _shufflevector_instruction:second_vector$var(InsnRef, VarRef).

// Auto-generated import logic for extractvalue_instruction:base

_extractvalue_instruction:base$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_extractvalue_instruction:base$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_extractvalue_instruction:base$imm] = "\t".
lang:physical:delimiter[`_extractvalue_instruction:base$var] = "\t".
lang:physical:filePath[`_extractvalue_instruction:base$imm]  = "./data/extractvalue_instruction-base-imm.dlm".
lang:physical:filePath[`_extractvalue_instruction:base$var]  = "./data/extractvalue_instruction-base-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+extractvalue_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    extractvalue_instruction(Insn),
    _extractvalue_instruction:base$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+extractvalue_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    extractvalue_instruction(Insn),
    _extractvalue_instruction:base$var(InsnRef, VarRef).

// Auto-generated import logic for insertvalue_instruction:base

_insertvalue_instruction:base$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_insertvalue_instruction:base$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_insertvalue_instruction:base$imm] = "\t".
lang:physical:delimiter[`_insertvalue_instruction:base$var] = "\t".
lang:physical:filePath[`_insertvalue_instruction:base$imm]  = "./data/insertvalue_instruction-base-imm.dlm".
lang:physical:filePath[`_insertvalue_instruction:base$var]  = "./data/insertvalue_instruction-base-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+insertvalue_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertvalue_instruction(Insn),
    _insertvalue_instruction:base$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+insertvalue_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertvalue_instruction(Insn),
    _insertvalue_instruction:base$var(InsnRef, VarRef).

// Auto-generated import logic for insertvalue_instruction:value

_insertvalue_instruction:value$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_insertvalue_instruction:value$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_insertvalue_instruction:value$imm] = "\t".
lang:physical:delimiter[`_insertvalue_instruction:value$var] = "\t".
lang:physical:filePath[`_insertvalue_instruction:value$imm]  = "./data/insertvalue_instruction-value-imm.dlm".
lang:physical:filePath[`_insertvalue_instruction:value$var]  = "./data/insertvalue_instruction-value-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+insertvalue_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertvalue_instruction(Insn),
    _insertvalue_instruction:value$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+insertvalue_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    insertvalue_instruction(Insn),
    _insertvalue_instruction:value$var(InsnRef, VarRef).

// Auto-generated import logic for alloca_instruction:size

_alloca_instruction:size$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_alloca_instruction:size$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_alloca_instruction:size$imm] = "\t".
lang:physical:delimiter[`_alloca_instruction:size$var] = "\t".
lang:physical:filePath[`_alloca_instruction:size$imm]  = "./data/alloca_instruction-size-imm.dlm".
lang:physical:filePath[`_alloca_instruction:size$var]  = "./data/alloca_instruction-size-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+alloca_instruction:size[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    alloca_instruction(Insn),
    _alloca_instruction:size$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+alloca_instruction:size[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    alloca_instruction(Insn),
    _alloca_instruction:size$var(InsnRef, VarRef).

// Auto-generated import logic for load_instruction:address

_load_instruction:address$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_load_instruction:address$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_load_instruction:address$imm] = "\t".
lang:physical:delimiter[`_load_instruction:address$var] = "\t".
lang:physical:filePath[`_load_instruction:address$imm]  = "./data/load_instruction-address-imm.dlm".
lang:physical:filePath[`_load_instruction:address$var]  = "./data/load_instruction-address-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+load_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    load_instruction(Insn),
    _load_instruction:address$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+load_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    load_instruction(Insn),
    _load_instruction:address$var(InsnRef, VarRef).

// Auto-generated import logic for store_instruction:value

_store_instruction:value$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_store_instruction:value$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_store_instruction:value$imm] = "\t".
lang:physical:delimiter[`_store_instruction:value$var] = "\t".
lang:physical:filePath[`_store_instruction:value$imm]  = "./data/store_instruction-value-imm.dlm".
lang:physical:filePath[`_store_instruction:value$var]  = "./data/store_instruction-value-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+store_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    store_instruction(Insn),
    _store_instruction:value$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+store_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    store_instruction(Insn),
    _store_instruction:value$var(InsnRef, VarRef).

// Auto-generated import logic for store_instruction:address

_store_instruction:address$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_store_instruction:address$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_store_instruction:address$imm] = "\t".
lang:physical:delimiter[`_store_instruction:address$var] = "\t".
lang:physical:filePath[`_store_instruction:address$imm]  = "./data/store_instruction-address-imm.dlm".
lang:physical:filePath[`_store_instruction:address$var]  = "./data/store_instruction-address-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+store_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    store_instruction(Insn),
    _store_instruction:address$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+store_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    store_instruction(Insn),
    _store_instruction:address$var(InsnRef, VarRef).

// Auto-generated import logic for atomicrmw_instruction:address

_atomicrmw_instruction:address$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_atomicrmw_instruction:address$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_atomicrmw_instruction:address$imm] = "\t".
lang:physical:delimiter[`_atomicrmw_instruction:address$var] = "\t".
lang:physical:filePath[`_atomicrmw_instruction:address$imm]  = "./data/atomicrmw_instruction-address-imm.dlm".
lang:physical:filePath[`_atomicrmw_instruction:address$var]  = "./data/atomicrmw_instruction-address-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+atomicrmw_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    atomicrmw_instruction(Insn),
    _atomicrmw_instruction:address$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+atomicrmw_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    atomicrmw_instruction(Insn),
    _atomicrmw_instruction:address$var(InsnRef, VarRef).

// Auto-generated import logic for atomicrmw_instruction:value

_atomicrmw_instruction:value$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_atomicrmw_instruction:value$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_atomicrmw_instruction:value$imm] = "\t".
lang:physical:delimiter[`_atomicrmw_instruction:value$var] = "\t".
lang:physical:filePath[`_atomicrmw_instruction:value$imm]  = "./data/atomicrmw_instruction-value-imm.dlm".
lang:physical:filePath[`_atomicrmw_instruction:value$var]  = "./data/atomicrmw_instruction-value-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+atomicrmw_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    atomicrmw_instruction(Insn),
    _atomicrmw_instruction:value$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+atomicrmw_instruction:value[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    atomicrmw_instruction(Insn),
    _atomicrmw_instruction:value$var(InsnRef, VarRef).

// Auto-generated import logic for cmpxchg_instruction:address

_cmpxchg_instruction:address$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_cmpxchg_instruction:address$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_cmpxchg_instruction:address$imm] = "\t".
lang:physical:delimiter[`_cmpxchg_instruction:address$var] = "\t".
lang:physical:filePath[`_cmpxchg_instruction:address$imm]  = "./data/cmpxchg_instruction-address-imm.dlm".
lang:physical:filePath[`_cmpxchg_instruction:address$var]  = "./data/cmpxchg_instruction-address-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+cmpxchg_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    cmpxchg_instruction(Insn),
    _cmpxchg_instruction:address$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+cmpxchg_instruction:address[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    cmpxchg_instruction(Insn),
    _cmpxchg_instruction:address$var(InsnRef, VarRef).

// Auto-generated import logic for cmpxchg_instruction:cmp

_cmpxchg_instruction:cmp$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_cmpxchg_instruction:cmp$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_cmpxchg_instruction:cmp$imm] = "\t".
lang:physical:delimiter[`_cmpxchg_instruction:cmp$var] = "\t".
lang:physical:filePath[`_cmpxchg_instruction:cmp$imm]  = "./data/cmpxchg_instruction-cmp-imm.dlm".
lang:physical:filePath[`_cmpxchg_instruction:cmp$var]  = "./data/cmpxchg_instruction-cmp-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+cmpxchg_instruction:cmp[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    cmpxchg_instruction(Insn),
    _cmpxchg_instruction:cmp$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+cmpxchg_instruction:cmp[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    cmpxchg_instruction(Insn),
    _cmpxchg_instruction:cmp$var(InsnRef, VarRef).

// Auto-generated import logic for cmpxchg_instruction:new

_cmpxchg_instruction:new$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_cmpxchg_instruction:new$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_cmpxchg_instruction:new$imm] = "\t".
lang:physical:delimiter[`_cmpxchg_instruction:new$var] = "\t".
lang:physical:filePath[`_cmpxchg_instruction:new$imm]  = "./data/cmpxchg_instruction-new-imm.dlm".
lang:physical:filePath[`_cmpxchg_instruction:new$var]  = "./data/cmpxchg_instruction-new-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+cmpxchg_instruction:new[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    cmpxchg_instruction(Insn),
    _cmpxchg_instruction:new$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+cmpxchg_instruction:new[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    cmpxchg_instruction(Insn),
    _cmpxchg_instruction:new$var(InsnRef, VarRef).

// Auto-generated import logic for getelementptr_instruction:base

_getelementptr_instruction:base$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_getelementptr_instruction:base$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_getelementptr_instruction:base$imm] = "\t".
lang:physical:delimiter[`_getelementptr_instruction:base$var] = "\t".
lang:physical:filePath[`_getelementptr_instruction:base$imm]  = "./data/getelementptr_instruction-base-imm.dlm".
lang:physical:filePath[`_getelementptr_instruction:base$var]  = "./data/getelementptr_instruction-base-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+getelementptr_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    getelementptr_instruction(Insn),
    _getelementptr_instruction:base$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+getelementptr_instruction:base[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    getelementptr_instruction(Insn),
    _getelementptr_instruction:base$var(InsnRef, VarRef).

// Auto-generated import logic for getelementptr_instruction:index

_getelementptr_instruction:index$imm(Insn, Index, Imm) ->
    string(Insn), int[64](Index), string(Imm).

_getelementptr_instruction:index$var(Insn, Index, Var) ->
    string(Insn), int[64](Index), string(Var).

lang:physical:delimiter[`_getelementptr_instruction:index$imm] = "\t".
lang:physical:delimiter[`_getelementptr_instruction:index$var] = "\t".
lang:physical:filePath[`_getelementptr_instruction:index$imm]  = "./data/getelementptr_instruction-index-imm.dlm".
lang:physical:filePath[`_getelementptr_instruction:index$var]  = "./data/getelementptr_instruction-index-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+getelementptr_instruction:index[Insn, Index] = Operand
<-
    instruction:id(Insn:InsnRef),
    getelementptr_instruction(Insn),
    _getelementptr_instruction:index$imm(InsnRef, Index, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+getelementptr_instruction:index[Insn, Index] = Operand
<-
    instruction:id(Insn:InsnRef),
    getelementptr_instruction(Insn),
    _getelementptr_instruction:index$var(InsnRef, Index, VarRef).

// Auto-generated import logic for icmp_instruction:first_operand

_icmp_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_icmp_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_icmp_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_icmp_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_icmp_instruction:first_operand$imm]  = "./data/icmp_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_icmp_instruction:first_operand$var]  = "./data/icmp_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+icmp_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    icmp_instruction(Insn),
    _icmp_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+icmp_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    icmp_instruction(Insn),
    _icmp_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for icmp_instruction:second_operand

_icmp_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_icmp_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_icmp_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_icmp_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_icmp_instruction:second_operand$imm]  = "./data/icmp_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_icmp_instruction:second_operand$var]  = "./data/icmp_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+icmp_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    icmp_instruction(Insn),
    _icmp_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+icmp_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    icmp_instruction(Insn),
    _icmp_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fcmp_instruction:first_operand

_fcmp_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fcmp_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fcmp_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_fcmp_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_fcmp_instruction:first_operand$imm]  = "./data/fcmp_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_fcmp_instruction:first_operand$var]  = "./data/fcmp_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fcmp_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fcmp_instruction(Insn),
    _fcmp_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fcmp_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fcmp_instruction(Insn),
    _fcmp_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for fcmp_instruction:second_operand

_fcmp_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_fcmp_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_fcmp_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_fcmp_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_fcmp_instruction:second_operand$imm]  = "./data/fcmp_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_fcmp_instruction:second_operand$var]  = "./data/fcmp_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+fcmp_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fcmp_instruction(Insn),
    _fcmp_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+fcmp_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    fcmp_instruction(Insn),
    _fcmp_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for phi_instruction:pair:value

_phi_instruction:pair:value$imm(Insn, Index, Imm) ->
    string(Insn), int[64](Index), string(Imm).

_phi_instruction:pair:value$var(Insn, Index, Var) ->
    string(Insn), int[64](Index), string(Var).

lang:physical:delimiter[`_phi_instruction:pair:value$imm] = "\t".
lang:physical:delimiter[`_phi_instruction:pair:value$var] = "\t".
lang:physical:filePath[`_phi_instruction:pair:value$imm]  = "./data/phi_instruction-pair-value-imm.dlm".
lang:physical:filePath[`_phi_instruction:pair:value$var]  = "./data/phi_instruction-pair-value-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+phi_instruction:pair:value[Insn, Index] = Operand
<-
    instruction:id(Insn:InsnRef),
    phi_instruction(Insn),
    _phi_instruction:pair:value$imm(InsnRef, Index, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+phi_instruction:pair:value[Insn, Index] = Operand
<-
    instruction:id(Insn:InsnRef),
    phi_instruction(Insn),
    _phi_instruction:pair:value$var(InsnRef, Index, VarRef).

// Auto-generated import logic for select_instruction:condition

_select_instruction:condition$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_select_instruction:condition$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_select_instruction:condition$imm] = "\t".
lang:physical:delimiter[`_select_instruction:condition$var] = "\t".
lang:physical:filePath[`_select_instruction:condition$imm]  = "./data/select_instruction-condition-imm.dlm".
lang:physical:filePath[`_select_instruction:condition$var]  = "./data/select_instruction-condition-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+select_instruction:condition[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    select_instruction(Insn),
    _select_instruction:condition$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+select_instruction:condition[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    select_instruction(Insn),
    _select_instruction:condition$var(InsnRef, VarRef).

// Auto-generated import logic for select_instruction:first_operand

_select_instruction:first_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_select_instruction:first_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_select_instruction:first_operand$imm] = "\t".
lang:physical:delimiter[`_select_instruction:first_operand$var] = "\t".
lang:physical:filePath[`_select_instruction:first_operand$imm]  = "./data/select_instruction-first_operand-imm.dlm".
lang:physical:filePath[`_select_instruction:first_operand$var]  = "./data/select_instruction-first_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+select_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    select_instruction(Insn),
    _select_instruction:first_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+select_instruction:first_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    select_instruction(Insn),
    _select_instruction:first_operand$var(InsnRef, VarRef).

// Auto-generated import logic for select_instruction:second_operand

_select_instruction:second_operand$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_select_instruction:second_operand$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_select_instruction:second_operand$imm] = "\t".
lang:physical:delimiter[`_select_instruction:second_operand$var] = "\t".
lang:physical:filePath[`_select_instruction:second_operand$imm]  = "./data/select_instruction-second_operand-imm.dlm".
lang:physical:filePath[`_select_instruction:second_operand$var]  = "./data/select_instruction-second_operand-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+select_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    select_instruction(Insn),
    _select_instruction:second_operand$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+select_instruction:second_operand[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    select_instruction(Insn),
    _select_instruction:second_operand$var(InsnRef, VarRef).

// Auto-generated import logic for call_instruction:function

_call_instruction:function$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_call_instruction:function$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_call_instruction:function$imm] = "\t".
lang:physical:delimiter[`_call_instruction:function$var] = "\t".
lang:physical:filePath[`_call_instruction:function$imm]  = "./data/call_instruction-function-imm.dlm".
lang:physical:filePath[`_call_instruction:function$var]  = "./data/call_instruction-function-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+call_instruction:function[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    call_instruction(Insn),
    _call_instruction:function$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+call_instruction:function[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    call_instruction(Insn),
    _call_instruction:function$var(InsnRef, VarRef).

// Auto-generated import logic for call_instruction:arg

_call_instruction:arg$imm(Insn, Index, Imm) ->
    string(Insn), int[64](Index), string(Imm).

_call_instruction:arg$var(Insn, Index, Var) ->
    string(Insn), int[64](Index), string(Var).

lang:physical:delimiter[`_call_instruction:arg$imm] = "\t".
lang:physical:delimiter[`_call_instruction:arg$var] = "\t".
lang:physical:filePath[`_call_instruction:arg$imm]  = "./data/call_instruction-arg-imm.dlm".
lang:physical:filePath[`_call_instruction:arg$var]  = "./data/call_instruction-arg-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+call_instruction:arg[Insn, Index] = Operand
<-
    instruction:id(Insn:InsnRef),
    call_instruction(Insn),
    _call_instruction:arg$imm(InsnRef, Index, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+call_instruction:arg[Insn, Index] = Operand
<-
    instruction:id(Insn:InsnRef),
    call_instruction(Insn),
    _call_instruction:arg$var(InsnRef, Index, VarRef).

// Auto-generated import logic for va_arg_instruction:va_list

_va_arg_instruction:va_list$imm(Insn, Imm) ->
    string(Insn), string(Imm).

_va_arg_instruction:va_list$var(Insn, Var) ->
    string(Insn), string(Var).

lang:physical:delimiter[`_va_arg_instruction:va_list$imm] = "\t".
lang:physical:delimiter[`_va_arg_instruction:va_list$var] = "\t".
lang:physical:filePath[`_va_arg_instruction:va_list$imm]  = "./data/va_arg_instruction-va_list-imm.dlm".
lang:physical:filePath[`_va_arg_instruction:va_list$var]  = "./data/va_arg_instruction-va_list-var.dlm".

+immediate(Imm), 
+immediate:value(Imm:ImmRef),
+operand(Operand),
+operand:by_immediate[Imm] = Operand,
+va_arg_instruction:va_list[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    va_arg_instruction(Insn),
    _va_arg_instruction:va_list$imm(InsnRef, ImmRef).


+variable(Var), 
+variable:id(Var:VarRef),
+operand(Operand),
+operand:by_variable[Var] = Operand,
+va_arg_instruction:va_list[Insn] = Operand
<-
    instruction:id(Insn:InsnRef),
    va_arg_instruction(Insn),
    _va_arg_instruction:va_list$var(InsnRef, VarRef).
