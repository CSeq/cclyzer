//--------------------------------------------------------------------
// [Basic predicate declarations]
//--------------------------------------------------------------------

// Call-graph edge from instruction to callee function

static_callgraph:edge(Callee, CallerInsn) ->
   instruction(CallerInsn), function_decl(Callee).

// Call-graph edge from caller function to callee function

static_callgraph:fn_edge(Callee, Caller) ->
   function(Caller), function_decl(Callee).

// This auxiliary predicate is derived directly from the instruction
// edges

static_callgraph:fn_edge(Callee, Caller) <-
   static_callgraph:edge(Callee, CallerInsn),
   instruction:function[CallerInsn] = Caller.

//-------------------------------
// [Reachability Constraints]
//-------------------------------

static_callgraph:fn_edge(Callee, Caller) ->
   reachable_function(Callee),
   reachable_function(Caller).


//--------------------------------------------------------------------
// Simple call-graph construction
//--------------------------------------------------------------------

// If a call instruction is reachable, then the callee function is
// also reachable. This accounts for the static part of the
// call-graph.

static_callgraph:edge(Callee, CallerInsn)
 , reachable_function(Callee)
 <-
   reachable_instruction(CallerInsn),
   call_instruction:function[CallerInsn] = Callee.

static_callgraph:edge(Callee, CallerInsn)
 , reachable_function(Callee)
 <-
   reachable_instruction(CallerInsn),
   invoke_instruction:function[CallerInsn] = Callee.
