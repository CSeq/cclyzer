//-----------------
// Class Types
//-----------------

// Class types are a subset of struct types

class_type(Type) -> struct_type(Type).


// The name (as it appears in source code) of the class

class_type:name[Type] = Name ->
   class_type(Type), string(Name).

// We follow a heuristic approach to identify class types, by
// searching for struct types with a specific prefix (namely,
// `%class.`).

class_type(Type), class_type:name[Type] = Name
 <-
   struct_type(Type),
   type:id(Type:FQName),
   string:like(FQName, "%%class.%"),
   string:length[FQName] = N,
   string:substring[FQName, 7, N - 7] = Name. // 7 is the length of the prefix "%class."

// TODO: Augment with struct types

// Constructors and Destructors for objects of this class type

class_type:constructor(Ctor, Type) ->
   class_type(Type), function_decl(Ctor).

class_type:destructor(Dtor, Type) ->
   class_type(Type), function_decl(Dtor).


// To identify constructors we rely on the presence of unmangled
// function names, which should be computed during fact generation.

class_type:constructor(Ctor, Type)
 <-
   class_type:name[Type] = ClassName,
   function:signature[Ctor] = Signature,
   function:type[Ctor] = FType,
   function_type:param[FType, 0] = PtrType,
   pointer_type:component[PtrType] = Type,
   string:like(Signature, ClassName + "::" + ClassName + "(%)").

class_type:constructor(Ctor, Type)
 <-
   class_type:name[Type] = FQClassName,
   function:signature[Ctor] = Signature,
   function:type[Ctor] = FType,
   function_type:param[FType, 0] = PtrType,
   pointer_type:component[PtrType] = Type,
   string:split[FQClassName, ":", _] = ClassName,
   string:like(FQClassName, "%::" + ClassName),
   string:like(Signature, FQClassName + "::" + ClassName + "(%)").

// Same for destructors

class_type:destructor(Dtor, Type)
 <-
   class_type:name[Type] = ClassName,
   function:signature[Dtor] = Signature,
   function:type[Dtor] = FType,
   function_type:param[FType, 0] = PtrType,
   pointer_type:component[PtrType] = Type,
   string:like(Signature, ClassName + "::~" + ClassName + "(%)").

class_type:destructor(Dtor, Type)
 <-
   class_type:name[Type] = FQClassName,
   function:signature[Dtor] = Signature,
   function:type[Dtor] = FType,
   function_type:param[FType, 0] = PtrType,
   pointer_type:component[PtrType] = Type,
   string:split[FQClassName, ":", _] = ClassName,
   string:like(FQClassName, "%::" + ClassName),
   string:like(Signature, FQClassName + "::~" + ClassName + "(%)").


// Mandatory properties of class types

class_type(Type) ->
   class_type:name[Type] = _.
